user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    keepalive_timeout  65;

    #开始
    # 定义限流规则（需放在http块或server块中）
    # zone=ratelimit:10m 表示创建名为ratelimit的共享内存区域，大小10M
    # rate=10r/s 表示限制频率为每秒10个请求
    limit_req_zone $binary_remote_addr zone=ratelimit:10m rate=1r/m;

    # 为API接口单独定义一个共享内存区域
    limit_req_zone $binary_remote_addr zone=apirate:5m rate=3r/m;

    server {
        listen 80;
        location /api/hello {
            # 使用上面定义的ratelimit规则
            limit_req zone=ratelimit;

            proxy_pass http://host.docker.internal:8081/api/hello;

            # 限流时返回的状态码（默认503）
            limit_req_status 429;
            }

        location /api/test {
                # 限制为每秒5个请求，允许2个突发请求
                limit_req zone=apirate burst=2;

                proxy_pass http://host.docker.internal:8082/api/hello;

                # 限流时返回的状态码（默认503）
                limit_req_status 429;
            }
        }

    #结束

}
