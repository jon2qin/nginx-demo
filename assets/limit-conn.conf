user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    keepalive_timeout  65;

    #开始
    # 定义并发连接限制规则（在http块中配置）
    # 以客户端IP为标识，创建名为conn_limit的共享内存区域（大小10M）
    limit_conn_zone $binary_remote_addr zone=conn_limit:10m;

    # 可选：限制整个服务器的总并发连接数（全局限制）
    limit_conn_zone $server_name zone=total_conn:10m;

    server {
        listen 80;

        # 对所有请求应用并发限制：单个IP最多5个并发连接
        limit_conn conn_limit 5;

        # 可选：限制服务器总并发连接数为1000
        limit_conn total_conn 1000;

        # 并发超限返回的状态码（默认503）
        limit_conn_status 503;

        # 自定义超限提示信息
        limit_conn_log_level error;  # 日志级别

        # 对动态接口设置更严格的限制
        location /api/hello {
            # 单个IP访问API最多2个并发连接
            limit_conn conn_limit 2;
            proxy_pass http://host.docker.internal:8081/api/hello;
        }

        # 静态资源可适当放宽限制
        location ~* \.(jpg|png|css|js)$ {
            limit_conn conn_limit 10;  # 单个IP最多10个并发连接
            root /var/www/static;
        }
    }

    #结束

}
